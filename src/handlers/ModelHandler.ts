import { AbstractCollectionHandler, CollectionItem, AppManager } from "@nodeknit/app-manager";
import { getGraphQLModelMetadata } from '../decorators/index.js';

export class ModelHandler extends AbstractCollectionHandler {

    async process(appManager: AppManager, collectionItems: CollectionItem[]): Promise<void> {
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Ö–æ–¥–∏–º –≤—Å–µ –º–æ–¥–µ–ª–∏ Sequelize —Å GraphQL –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞–º–∏
        const sequelizeModels = appManager.sequelize.modelManager.models;
        
        for (const model of sequelizeModels) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –º–æ–¥–µ–ª–∏ GraphQL –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
            const metadata = getGraphQLModelMetadata(model);
            
            if (metadata && !metadata.exclude) {
                console.log(`üîç Found GraphQL model: ${model.name}`);
                
                // –ú–æ–¥–µ–ª—å —É–∂–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
            }
        }
        
        console.log(`üìä Found ${collectionItems.length} GraphQL models in collection`);
    }

    async unprocess(appManager: AppManager, collectionItems: CollectionItem[]): Promise<void> {
        // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
        console.log('üßπ Cleaning up GraphQL model collection');
    }
}
